{"version":3,"sources":["components/Instructions.js","components/BingoTicket/BingoSpace.js","components/BingoTicket/BingoNormalRow.js","components/BingoTicket/BingoCentralRow.js","components/BingoTicket/BingoTable.js","components/BingoTicket/BingoTicket.js","components/Footer.js","components/CartonLleno.js","App.js","serviceWorker.js","store/reducers.js","index.js","components/BingoTicket/logo.png"],"names":["Instructions","useState","instructionsVisible","setInstructionsVisible","className","onClick","e","id","BingoSpace","data","dispatch","useDispatch","type","payload","style","ticked","backgroundColor","text","aclaration","BingoNormalRow","row","map","index","key","BingoCentralRow","left","slice","right","bingoSlices","BingoTable","array","ticket","guide","first","second","central","fourth","fifth","BingoTicket","carton","onCartonLleno","every","c","isCartonLleno","src","logo","alt","Footer","CartonLleno","name","setName","url","title","value","onChange","target","TwitterShareButton","TwitterIcon","size","round","FacebookShareButton","quote","FacebookIcon","RedditShareButton","RedditIcon","App","mostrarBanner","setMostrarBanner","useSelector","state","onCloseClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","i","bingoReducer","ns","s","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.a957ac9b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport default function Instructions() {\r\n  const [instructionsVisible, setInstructionsVisible] = useState(false);\r\n\r\n  const showInstrucciones = e => {\r\n    setInstructionsVisible(!instructionsVisible);\r\n  };\r\n  return (\r\n    <div>\r\n      <button className=\"toggle\" onClick={showInstrucciones}>\r\n        ?\r\n      </button>\r\n      {instructionsVisible ? (\r\n        <div id=\"instrucciones\">\r\n          <p>\r\n            Sacándole provecho al avance del discurso reaccionario en el{\" \"}\r\n            <i>mainstream</i>, los zurdos de Nada Respetable hemos desarrollado\r\n            este dispositivo lúdico.\r\n          </p>\r\n          <u>Cómo jugar</u>\r\n          <p>\r\n            Son necesarios una tarjeta de Criptobingo por jugador y un lápiz u\r\n            otro dispositivo para la cancelación de casilleros.\r\n          </p>\r\n          <ul>\r\n            <li>Siéntese frente al televisor con su grupo familiar.</li>\r\n            <li>\r\n              Encienda el televisor y sintonice cualquier canal nacional. Sí,\r\n              cualquier canal: Estos hijos de puta están en todos lados.\r\n            </li>\r\n            <li>Dé inicio a la diversión.</li>\r\n          </ul>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function BingoSpace({ data }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <td\r\n      onClick={() => dispatch({ type: \"TICK_SPACE\", payload: { id: data.id } })}\r\n      style={data.ticked ? { backgroundColor: \"#ffd700\" } : {}}\r\n    >\r\n      {data.text} <br />\r\n      {data.aclaration && <p className=\"aclaracion\">{data.aclaration}</p>}\r\n    </td>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport BingoSpace from './BingoSpace';\r\n\r\nexport default function BingoNormalRow({ row }) {\r\n  return (\r\n    <tr>\r\n      {row.map((data, index) => (\r\n        <BingoSpace key={index} data={data} />\r\n      ))}\r\n    </tr>\r\n  );\r\n}","import React from \"react\";\r\nimport BingoSpace from \"./BingoSpace\";\r\n\r\nexport default function BingoCentralRow({ row }) {\r\n  const left = row.slice(0, 2);\r\n  const right = row.slice(2, 4);\r\n\r\n  return (\r\n    <tr>\r\n      {left.map((data, index) => (\r\n        <BingoSpace key={index} data={data} />\r\n      ))}\r\n      <td className=\"siete\"></td>\r\n      {right.map((data, index) => (\r\n        <BingoSpace key={index} data={data} />\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BingoNormalRow from \"./BingoNormalRow\";\r\nimport BingoCentralRow from \"./BingoCentralRow\";\r\n\r\nconst bingoSlices = [[0, 5], [5, 10], [10, 14], [14, 19], [19, 24]];\r\n\r\nexport default function BingoTable({ ticket }) {\r\n  const buildRow = (array, guides) => {\r\n    return guides.map(guide => array.slice(guide[0], guide[1]));\r\n  };\r\n\r\n  const [first, second, central, fourth, fifth] = buildRow(ticket, bingoSlices);\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"bingo\">\r\n        <tbody>\r\n          <BingoNormalRow row={first} />\r\n          <BingoNormalRow row={second} />\r\n          <BingoCentralRow row={central} />\r\n          <BingoNormalRow row={fourth} />\r\n          <BingoNormalRow row={fifth} />\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport BingoTable from \"./BingoTable\";\r\n\r\nexport default function BingoTicket({ carton, onCartonLleno }) {\r\n  const isCartonLleno = carton => carton.every(c => c.ticked);\r\n\r\n  // If carton is full\r\n  // Then run callback\r\n  if(isCartonLleno(carton)){\r\n    onCartonLleno()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        <header>\r\n          <img src={logo} alt=\"Criptobingo\" className=\"logo\" />\r\n        </header>\r\n        <main>\r\n          <BingoTable ticket={carton} />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <p className=\"boldfooter\">NADA RESPETABLE</p>\r\n        <span>www.nadarespetable.com</span>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TwitterShareButton,\r\n  FacebookShareButton,\r\n  RedditShareButton,\r\n  TwitterIcon,\r\n  FacebookIcon,\r\n  RedditIcon\r\n} from \"react-share\";\r\nimport \"./cartonLleno.css\";\r\n\r\nexport default function CartonLleno() {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const url = \"http://criptobingo.nadarespetable.com\";\r\n\r\n  const title =\r\n    name !== \"\"\r\n      ? `Le completé un Criptobingo a ${name}!`\r\n      : `Completé un Criptobingo!`;\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"carton-lleno-banner-back\"}></div>\r\n      <div className=\"carton-lleno-banner-content\">\r\n        <h1>¡Congratulaciones!</h1>\r\n        <h3>Usted ha completado un Criptobingo.</h3>\r\n        <p>¿A quién le ha completado este Criptobingo?</p>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <p>Compártalo en sus redes sociales:</p>\r\n        <div className={\"social-share-bar\"}>\r\n          <TwitterShareButton url={url} title={title}>\r\n            <TwitterIcon size={32} round={false}/>\r\n          </TwitterShareButton>\r\n          <FacebookShareButton url={url} quote={title} >\r\n            <FacebookIcon size={32} round={false} />\r\n          </FacebookShareButton>\r\n          <RedditShareButton url={url} title={title} >\r\n            <RedditIcon size={32} round={false}/>\r\n          </RedditShareButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport Instructions from \"./components/Instructions\";\r\nimport BingoTicket from \"./components/BingoTicket/BingoTicket\";\r\nimport Footer from \"./components/Footer\";\r\nimport CartonLleno from \"./components/CartonLleno\";\r\n\r\nfunction App() {\r\n  const [mostrarBanner, setMostrarBanner] = useState(false);\r\n  const carton = useSelector(state => state);\r\n\r\n  const handleCartonLleno = () => {\r\n    setMostrarBanner(true);\r\n  };\r\n\r\n  const handleCloseBanner = () => {\r\n    setMostrarBanner(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {mostrarBanner && <CartonLleno onCloseClick={handleCloseBanner} />}\r\n        <Instructions />\r\n        <BingoTicket carton={carton} onCartonLleno={handleCartonLleno} />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import carton from \"../carton\";\r\n\r\nconst _ticket = carton.map((c, i) => ({ ...c, id: i, ticked: false }));\r\n\r\nconst initialState = _ticket;\r\n\r\nconst bingoReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"TICK_SPACE\":\r\n      const ns = state.map(s => {\r\n        if (s.id === payload.id) {\r\n          s.ticked = !s.ticked;\r\n        }\r\n        return s;\r\n      });\r\n      return [...ns];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bingoReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport bingoReducer from \"./store/reducers\";\r\n\r\nconst store = createStore(\r\n  bingoReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.4770b86b.png\";"],"sourceRoot":""}